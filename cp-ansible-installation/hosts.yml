all:
  vars:
    ansible_connection: ssh
    ansible_user: ubuntu
    ansible_become: true
    ansible_ssh_private_key_file: ~/keys/rpi-key
    ansible_ssh_common_args: -o StrictHostKeyChecking=no
    required_disk_space_mb: 1000
    required_total_memory_mb_zookeeper: 1000
    required_total_memory_mb_kafka_broker: 1000
    required_total_memory_mb_kafka_connect: 1000
    required_total_memory_mb_schema_registry: 1000
    required_total_memory_mb_ksql: 1000
    required_total_memory_mb_kafka_rest: 1000
    required_total_memory_mb_control_center: 1000
    jmxexporter_enabled: false
    installation_method: archive
    confluent_archive_file_source: http://packages.confluent.io/archive/7.1/confluent-7.1.1.tar.gz
    confluent_server_enabled: true
    confluent_package_version: 7.1.1
    validate_hosts: false
    health_checks_enabled: false
    ssl_enabled: false
    kafka_broker_schema_validation_enabled: true
    telemetry_enabled: true
    telemetry_api_key: Healht+CloudKEY
    telemetry_api_secret: Healht+CloudSecret
    kafka_broker_copy_files:
      - source_path: /raspberrypi/aws_credentials
        destination_path: /etc/security/aws/aws_credentials
    kafka_broker_custom_properties:
      confluent.tier.feature: "true"
      confluent.tier.enable: "true"
      confluent.tier.backend: S3
      confluent.tier.s3.bucket: cmde-rpi-tieredstorage
      confluent.tier.s3.region: eu-central-1
      confluent.tier.s3.cred.file.path: /etc/security/aws/aws_credentials
      confluent.tier.metadata.replication.factor: 1
      confluent.tier.fetcher.num.threads: 4
      confluent.tier.archiver.num.threads: 2
      confluent.tier.topic.delete.check.interval.ms: 3600000
      log.segment.bytes: 10485760
      confluent.tier.local.hotset.ms: 5400000
      confluent.license: YOURCONFLUENTLICENSE
    schema_registry_custom_properties:
      confluent.license: YOURCONFLUENTLICENSE
    kafka_connect_custom_properties:
      confluent.license: YOURCONFLUENTLICENSE
    control_center_custom_properties:
      confluent.license: YOURCONFLUENTLICENSE
    kafka_rest_custom_properties:
      confluent.license: YOURCONFLUENTLICENSE
    ksql_custom_properties:
      confluent.license: YOURCONFLUENTLICENSE
    kafka_broker_service_environment_overrides:
      KAFKA_HEAP_OPTS: "-Xmx1G -Xms128M"
    kafka_connect_service_environment_overrides:
      KAFKA_HEAP_OPTS: "-Xmx256M -Xms128M"
    kafka_rest_service_environment_overrides:
      KAFKAREST_HEAP_OPTS: "-Xmx256M -Xms128M"
    schema_registry_service_environment_overrides:
      SCHEMA_REGISTRY_HEAP_OPTS: "-Xmx256M -Xms128M"
    ksql_service_environment_overrides:
      KSQL_HEAP_OPTS: "-Xmx1G -Xms128M"
    control_center_service_environment_overrides:
      CONTROL_CENTER_HEAP_OPTS: "-Xmx1G -Xms128M"

zookeeper:
  hosts:
    cpcluster1:
    cpcluster2:
    cpcluster3:

kafka_broker:
  ## To set variables on all kafka_broker hosts, use the vars block here
  vars:
      confluent.balancer.enable: false
  hosts:
    cpcluster1:
      id: 1
    cpcluster2:
      id: 2
    cpcluster3:
      id: 3

kafka_rest:
  hosts:
    cpcluster3:


schema_registry:
  hosts:
    cpcluster4:

ksql:
  hosts:
    cpcluster1:

kafka_connect:
  hosts:
    cpcluster2:
      vars:
        kafka_connect_confluent_hub_plugins:
          - confluentinc/kafka-connect-datagen:0.4.0
          - confluentinc/kafka-connect-oracle-cdc:2.0.4
          - confluentinc/kafka-connect-mqtt:1.5.1
          - confluentinc/kafka-connect-jdbc:10.4.1
          - confluentinc/kafka-connect-s3:10.0.7

control_center:
  hosts:
    cpcluster4:
      vars:
        confluent.telemetry.enabled: true
        confluent.telemetry.api.key: Health+CloudKEy
        confluent.telemetry.api.secret: Health+CloudSECRET
        confluent.controlcenter.mode.enable: management
        confluent.controlcenter.name: cpcluster

